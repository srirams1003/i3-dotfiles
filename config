# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4
# workspace_layout stacking
# workspace_layout tabbed


# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# font pango:monospace 11

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:DejaVu Sans Mono 11

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3
# exec --no-startup-id /usr/bin/gnome-keyring-daemon --start --components=secrets
# exec --no-startup-id /usr/bin/gnome-keyring-daemon --start --components=pkcs11,secrets,ssh,gpg
# exec --no-startup-id xrandr --output DP-1 --brightness 0.7
exec --no-startup-id picom --config ~/.config/i3/picom.conf -b
# allows for authentication popups which allows me to use gui apps like timeshift and software manager the way they are meant to be used
exec --no-startup-id /usr/lib/policykit-1-gnome/polkit-gnome-authentication-agent-1
# executing some commands i need to run on startup that fail to run directly in this config file for some reason
exec --no-startup-id ~/.config/i3/startup.sh
# # setting default camera profile using guvcview # Edit: actually decided against this because of some issues i failed to understand
# exec --no-startup-id ~/.config/i3/set_camera_settings.sh
# setting mouse sensitivity upon login
exec --no-startup-id ~/.config/i3/set_mouse_sensitivity.sh

# Media player controls
bindsym XF86AudioPlay exec playerctl play-pause
# bindsym XF86AudioPause exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous


# toggle between list of audio output devices to use
bindsym $mod+F6 exec --no-startup-id ~/.config/i3/sink-switch.sh --external 
bindsym $mod+F7 exec --no-startup-id ~/.config/i3/sink-switch.sh --speakers 
bindsym $mod+F8 exec --no-startup-id ~/.config/i3/sink-switch.sh --headphones
bindsym $mod+F9  exec ~/.config/i3/toggle_sink.sh


# # NOTE: i do not need this f10 bind anymore cuz i have the f12 bind that i can use instead
# bindsym $mod+F10 exec --no-startup-id xrandr --output DP-1 --mode 1920x1080

# # NOTE: for DP monitor
# bindsym $mod+F11 exec --no-startup-id xrandr --output eDP-1 --auto --mode 1400x900 --brightness 0.7 && xrandr --output DP-1 --off
# bindsym $mod+F12 exec --no-startup-id xrandr --output DP-1 --auto --mode 1920x1080 --brightness 0.7 && xrandr --output eDP-1 --off 
# NOTE: for HDMI instead of DP monitor
bindsym $mod+F11 exec --no-startup-id xrandr --output eDP-1 --auto --brightness 0.7 && xrandr --output HDMI-1 --off
bindsym $mod+F12 exec --no-startup-id xrandr --output HDMI-1 --auto --mode 1920x1080 --brightness 0.7 && xrandr --output eDP-1 --off 

bindsym Control+Shift+Escape exec --no-startup-id gnome-system-monitor
bindsym $mod+b exec --no-startup-id blueman-manager
bindsym $mod+m exec --no-startup-id cinnamon-settings sound
bindsym $mod+g exec --no-startup-id simplescreenrecorder
bindsym $mod+n exec --no-startup-id psensor
# Increase brightness
bindsym $mod+equal exec --no-startup-id ~/.config/i3/increase_brightness_mac.sh
bindsym Pause exec --no-startup-id ~/.config/i3/increase_brightness.sh
# Decrease brightness
bindsym $mod+minus exec --no-startup-id ~/.config/i3/decrease_brightness_mac.sh
bindsym Scroll_Lock exec --no-startup-id ~/.config/i3/decrease_brightness.sh

##  Screenshots in files
bindsym Print exec --no-startup-id maim --format=png "/home/$USER/Pictures/screenshot-$(date -u +'%Y%m%d-%H%M%SZ')-all.png"
bindsym $mod+Print exec --no-startup-id maim --format=png --window $(xdotool getactivewindow) "/home/$USER/Pictures/screenshot-$(date -u +'%Y%m%d-%H%M%SZ')-current.png"
bindsym Shift+Print exec --no-startup-id maim --format=png --select "/home/$USER/Pictures/screenshot-$(date -u +'%Y%m%d-%H%M%SZ')-selected.png"

# to emulate cmd + shift + T from powertoys in windows to use ocr to save text from screenshot to clipboard
bindsym $mod+Shift+t exec --no-startup-id maim --format=png --select "/tmp/myverytemporarypicture.png" && tesseract /tmp/myverytemporarypicture.png /tmp/myverytemporaryoutput && cat /tmp/myverytemporaryoutput.txt | xsel -ib

# to use dict command with ocr
bindsym $mod+t exec --no-startup-id ~/.config/i3/dict_screenshot.sh

# to use dict command with text selection
bindsym $mod+z exec --no-startup-id ~/.config/i3/dict_selection.sh

## Screenshots in clipboards
bindsym Ctrl+Print exec --no-startup-id maim --format=png | xclip -selection clipboard -t image/png
bindsym Ctrl+$mod+Print exec --no-startup-id maim --format=png --window $(xdotool getactivewindow) | xclip -selection clipboard -t image/png
bindsym Ctrl+Shift+Print exec --no-startup-id maim --format=png --select | xclip -selection clipboard -t image/png


# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock -i ~/Documents/wallpapers/firewatchtower.png --nofork
exec --no-startup-id xset dpms 600 600 600
exec --no-startup-id xset s 600

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id sh -c 'eval $(/usr/bin/gnome-keyring-daemon --start --components=pkcs11,secrets,ssh,gpg); export SSH_AUTH_SOCK'
# NOTE: the lines above and below are for remembering wifi password between reboots (i think). the one below works for sure
# exec --no-startup-id /usr/bin/gnome-keyring-daemon --start --components=pkcs11,secrets,ssh,gpg
exec --no-startup-id nm-applet

exec --no-startup-id playerctld daemon
# exec --no-startup-id bluetoothctl connect 08:EB:ED:4C:ED:1F
# exec --no-startup-id bluetoothctl connect 4C:FE:2E:28:70:72

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
# bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
# bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id ~/.config/i3/raise_volume.sh
bindsym XF86AudioLowerVolume exec --no-startup-id ~/.config/i3/lower_volume.sh
# bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id ~/.config/i3/mute_unmute.sh
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# move tiling windows via drag & drop by left-clicking into the title bar,
# or left-clicking anywhere into the window while holding the floating modifier.
tiling_drag modifier titlebar

# start a terminal
# bindsym $mod+Return exec i3-sensible-terminal
bindsym $mod+Return exec alacritty

# kill focused window
bindsym $mod+q kill

# start dmenu (a program launcher)
# bindsym $mod+d exec --no-startup-id dmenu_run
bindsym $mod+d exec --no-startup-id "rofi -modi drun,run -show drun"
bindsym $mod+Shift+d exec --no-startup-id i3-dmenu-desktop
bindsym $mod+Shift+Mod1+d exec --no-startup-id dmenu_run
# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+semicolon split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+Shift+a focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1:  "
set $ws2 "2:  "
set $ws3 "3:  "
set $ws4 "4:  "
set $ws5 "5: 󰹕 "
set $ws6 "6: 󰖣 "
set $ws7 "7:  "
set $ws8 "8:  "
set $ws9 "9:  "
set $ws10 "10: 󰖂 "

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
# # NOTE: commenting this out cuz i have a custom rofi based power menu now instead
# bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

set $white     #ffffff
set $black     #000000
set $gray      #808080
set $yellow    #ffff00
set $teal      #008080
set $invis     #00000000
set $cyan      #00E5E5

# window colors
#                       border    background    text     indicator
client.focused          $invis    $teal         $white   $cyan
client.unfocused        $invis    $invis        $white   $white
client.focused_inactive $invis    $gray         $white   $gray
client.urgent           $invis    $yellow       $black   $yellow


bindsym $mod+r mode "resize"

bindsym $mod+x exec nemo
exec_always feh --bg-scale ~/Documents/wallpapers/Firewatch+Tower.png

# assign [class="Google-chrome"] $ws1
# assign [class="Alacritty"] $ws2
assign [class="Spotify"] $ws3
assign [class="okular"] $ws4
assign [class="obsidian"] $ws5
assign [class="WebApp-WhatsApp5730"] $ws6
assign [class="VirtualBox Manager"] $ws7
# assign [class="Cursor"] $ws8
assign [class="Code"] $ws8
# assign [class="Nemo"] $ws9
assign [class="Com.cisco.secureclient.gui"] $ws10
assign [class="Surfshark"] $ws10
# for_window [class="Surfshark"] floating disable

bindsym Mod1+Tab  workspace back_and_forth

# # NOTE: commenting out chrome on startup for now and replacing it with firefox cuz so much faster (i am guessing that chrome is slowed down because of extensions)
# exec --no-startup-id google-chrome --password-store=gnome-libsecret
exec --no-startup-id firefox
# exec --no-startup-id alacritty
# exec --no-startup-id spotify
# # if the below two are installed using flatpak
exec --no-startup-id flatpak run org.kde.okular
# exec --no-startup-id flatpak run md.obsidian.Obsidian
# # if the below two are installed using snap
# # exec --no-startup-id okular
# exec --no-startup-id obsidian
# exec --no-startup-id google-chrome-stable --app="http://web.whatsapp.com" --class=WebApp-WhatsApp5730 --name=WebApp-WhatsApp5730 --user-data-dir=/home/sriram/.local/share/ice/profiles/WhatsApp5730 --start-maximized
# exec --no-startup-id VirtualBox Manager
# exec --no-startup-id code
# exec --no-startup-id nemo
# exec --no-startup-id /opt/cisco/secureclient/bin/vpnui
# exec --no-startup-id surfshark

# # NOTE: uncomment this line to use chrome as your default browser keybind instead
# bindsym $mod+Shift+Return exec google-chrome --password-store=gnome-libsecret
bindsym $mod+Shift+Return exec firefox
# NOTE: using this as a temporary keybind for google-chrome
bindsym $mod+Shift+g exec google-chrome --password-store=gnome-libsecret

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        # status_command i3status
        # status_command i3blocks
        status_command SCRIPT_DIR=~/.config/i3/i3blocks-contrib/ i3blocks
        # wheel_up_cmd nop
        # wheel_down_cmd nop
        separator_symbol " "

		position top

		tray_output primary

		# height 25

        colors {
			background $black
			separator  $black 

			#                  border             background         text
			focused_workspace  $white             $black             $white
			inactive_workspace $black             $black             $white
			urgent_workspace   $yellow            $yellow            $black
		}
		
}


# Gaps
gaps inner 10
gaps outer 10

# Smart gaps (no outer gap when only one window)
smart_gaps on
# smart_gaps off

# Smart borders (no border when only one window)
smart_borders on

default_border pixel 2
default_floating_border pixel 2

title_align center

bindsym Mod1+Ctrl+l exec --no-startup-id ~/.config/i3/i3blocks-contrib/shutdown_menu/shutdown_menu

bindsym $mod+bracketleft workspace prev
bindsym $mod+bracketright workspace next

# # NOTE: leaving this here as a remainder that mod + p has nothing assigned to it, which is a waste as it is so convenient
# # NOTE: other amazing keys have no $mod bindings assigned are: o, i, u, y
# bindsym $mod+p exec --no-startup-id notify-send "hi mom"
